@model ClothBazar.Web.ViewModels.CategorySearchViewModel
@{
    ViewBag.Title = "CategoryTable";
}

<div>
    <table id="categoryTable" class="table table-striped table-bordered" style="width:100%">
        <thead>
            <tr>
                <th class="font-weight-bold">Category Name</th>
                <th class="font-weight-bold">Products</th>
                <th class="font-weight-bold">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Categories != null && Model.Categories.Count > 0)
            {
                foreach (var category in Model.Categories)
                {
                    <tr>
                        <td>@category.Name</td>
                        <td>
                            @category.Products.Count
                        </td>
                        <td class="wrap-td">
                            <button class="edit-new-btn" data-id="@category.ID">Edit</button>
                            <button class="deleteBtn" data-id="@category.ID">Delete</button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<div>
    @if (Model.Pager != null)
    {
        if (Model.Pager.CurrentPage > 1)
        {
            <button type="button" data-page="1" class="pageBtn">First</button>
            <button type="button" data-page="@(Model.Pager.CurrentPage - 1)" class="pageBtn">Previous</button>
        }

        for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
        {
            string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;
                <button type="button" data-page="@page" class="@activeClass pageBtn">@page</button>
        }

        if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
        {
            <button type="button" data-page="@(Model.Pager.CurrentPage + 1)" class="pageBtn">Next</button>
            <button type="button" data-page="@Model.Pager.EndPage" class="pageBtn">Last</button>
        }
    }
</div>


<script>

    //Edit Button
    jQuery(document).ready(function () {
        jQuery('.edit-new-btn').on('click',
            function (e) {
                jQuery.ajax({
                    url: '/Category/Edit',
                    data: {
                        ID: jQuery(this).attr('data-id')
                    },
                    beforeSend: function (xhr) { },
                    success: function (response, statusText, xhr) {
                        // console.log(xhr, response, statusText);
                        jQuery("#editContainer").html(response);
                        focusAction("editContainer");
                    },
                    complete: function (xhr, response, statusText) { },
                    error: function (xhr, errors) { alert("Fail");}
                });


            });
    });

    // Pagination 
    jQuery(".pageBtn").on("click",
        function () {
            jQuery.ajax({
                    type: 'POST',
                    url: '/Category/CategoryTable',
                    data: {
                        pageNo: jQuery(this).attr('data-page'),
                        search: '@Model.SearchTerm'
                    }
                })
                .done(function (response) {
                    jQuery(".tableContainer").html(response);
                })
                .fail(function () {
                    alert("Fail");
                });
        });


    // Delete Button
    jQuery(".deleteBtn").on("click", function (e) {

        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                jQuery.ajax({
                        type: 'POST',
                        url: '@Url.Action("Delete", "Category")',
                        data: {
                            ID: jQuery(this).attr('data-id')
                        }
                    })
                    .done(function(response) {
                        jQuery(".tableContainer").html(response);

                        Swal.fire(
                            'Deleted!',
                            'Your file has been deleted.',
                            'success'
                        );

                    })
                    .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("FAIL");
                    });

            }
        });

    });
</script>

